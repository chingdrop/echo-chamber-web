services:
  db:
    image: postgres:17.3
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - backend

  redis:
    image: redis:alpine
    networks:
      - backend

  web:
    build: 
      context: ./echo-chamber-web
      dockerfile: Dockerfile
      target: main
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - ./echo-chamber-web:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - backend

  debug:
    build: 
      context: ./echo-chamber-web
      dockerfile: Dockerfile
      target: debug
    command: ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "--wait-for-client", "-m"]
    volumes:
      - ./echo-chamber-web:/app
    ports:
      - "5678:5678"
    depends_on:
      - db
      - redis
    networks:
      - backend

  celery:
    build: 
      context: ./echo-chamber-web
      dockerfile: Dockerfile
      target: main
    command: ["celery", "-A", "echochamber.celery", "worker", "--loglevel=info"]
    volumes:
      - ./echo-chamber-web:/app
    depends_on:
      - db
      - redis
      - web
    networks:
      - backend

  front:
    build: ./echo-chamber-front
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - backend

networks:
  backend:
    driver: bridge
